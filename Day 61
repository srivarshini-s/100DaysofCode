Longest Palindromic Substring

Given a string s, return the longest 
palindromic substring in s.

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.

CODE:

class Solution:
    def longestPalindrome(self, s: str) -> str:
        def is_palindrome(s):
            return s == s[::-1]
        palindromic_substring=[]
        for i in range ( len(s)):
            for j in range (i, len(s)):
                sub_string = s[i:j+1]
                if is_palindrome(sub_string):
                    if len(palindromic_substring)>len(sub_string):
                        continue
                    else:
                        palindromic_substring = sub_string
        return palindromic_substring
